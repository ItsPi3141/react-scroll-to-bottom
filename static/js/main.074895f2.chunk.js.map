{"version":3,"sources":["CommandBar.js","StatusBar.js","App.js","reportWebVitals.js","index.js"],"names":["ROOT_STYLE","backgroundColor","boxShadow","display","listStyleType","margin","padding","fontSize","height","marginLeft","CommandBar","_ref","nonce","rootCSS","useMemo","createEmotion","key","css","scrollTo","useScrollTo","scrollToBottom","useScrollToBottom","scrollToEnd","useScrollToEnd","scrollToStart","useScrollToStart","scrollToTop","useScrollToTop","options","setOptions","useState","behavior","handleScrollTo100pxClick","useCallback","handleScrollToBottomClick","handleScrollToEndClick","handleScrollToStartClick","handleScrollToTopClick","handleSmoothChange","_ref2","target","checked","_jsx","className","classNames","children","_jsxs","onClick","onChange","type","alignItems","borderRadius","flex","fontFamily","justifyContent","textAlign","color","StatusBar","scrollTopRef","useRef","animating","useAnimating","animatingToEnd","useAnimatingToEnd","atBottom","useAtBottom","atEnd","useAtEnd","atStart","useAtStart","atTop","useAtTop","mode","useMode","sticky","useSticky","useObserveScrollPosition","scrollTop","current","innerText","ref","FADE_IN_ANIMATION_KEYFRAMES","opacity","marginRight","bottom","position","CONTAINER_STYLE","borderColor","borderStyle","borderWidth","marginTop","LARGE_CONTAINER_STYLE","SCROLL_VIEW_STYLE","SCROLL_VIEW_PADDING_STYLE","paddingLeft","paddingRight","SMALL_CONTAINER_STYLE","STATUS_BAR_CSS","createParagraphs","count","Array","fill","map","loremIpsum","units","App","containerCSS","largeContainerCSS","scrollViewCSS","scrollViewPaddingCSS","smallContainerCSS","statusBarCSS","keyframes","animation","concat","containerSize","setContainerSize","intervalEnabled","setIntervalEnabled","paragraphs","setParagraphs","commandBarVisible","setCommandBarVisible","limitAutoScrollHeight","setLimitAutoScrollHeight","loadedVersion","document","querySelector","getAttribute","disableScrollToBottomPanel","setDisableScrollToBottomPanel","disableScrollToTopPanel","setDisableScrollToTopPanel","handleDisableScrollToBottomPanelClick","handleDisableScrollToTopPanelClick","_ref3","handleAdd","handleAdd1","handleAdd10","handleAddButton","handleAddSuccessively","lorem","LoremIpsum","nextParagraphs","generateSentences","requestAnimationFrame","generateParagraphs","handleAddAndRemove","push","handleClear","handleCommandBarVisibleChange","_ref4","handleContainerSizeLarge","handleContainerSizeNormal","handleContainerSizeSmall","handleIntervalEnabledChange","_ref5","handleLimitAutoScrollHeightChange","_ref6","containerClassName","handleKeyDown","_ref7","keyCode","window","location","reload","useEffect","addEventListener","removeEventListener","scroller","title","ReactScrollToBottom","initialScrollBehavior","undefined","scrollViewClassName","StateContext","Consumer","_ref8","paragraph","startsWith","substr","_ref9","reverse","Interval","callback","enabled","timeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.074895f2.chunk.js","sourcesContent":["/* eslint no-magic-numbers: \"off\" */\n\nimport classNames from \"classnames\";\nimport createEmotion from \"@emotion/css/create-instance\";\nimport React, { useCallback, useMemo, useState } from \"react\";\n\nimport {\n  useScrollTo,\n  useScrollToBottom,\n  useScrollToEnd,\n  useScrollToStart,\n  useScrollToTop,\n} from \"react-scroll-to-bottom-updated\";\n\nconst ROOT_STYLE = {\n  \"&.command-bar\": {\n    backgroundColor: \"#FFF\",\n    boxShadow: \"0 0 10px rgba(0, 0, 0, .2)\",\n\n    \"& .command-bar__actions\": {\n      display: \"flex\",\n      listStyleType: \"none\",\n      margin: 0,\n      padding: 10,\n    },\n\n    \"& .command-bar__action\": {\n      fontSize: 11,\n      height: 40,\n\n      \"&:not(:first-child)\": {\n        marginLeft: 4,\n      },\n    },\n  },\n};\n\nconst CommandBar = ({ nonce }) => {\n  const rootCSS = useMemo(\n    () => createEmotion({ key: \"playground--css-\", nonce }).css(ROOT_STYLE),\n    [nonce]\n  );\n\n  const scrollTo = useScrollTo();\n  const scrollToBottom = useScrollToBottom();\n  const scrollToEnd = useScrollToEnd();\n  const scrollToStart = useScrollToStart();\n  const scrollToTop = useScrollToTop();\n  const [options, setOptions] = useState({ behavior: \"smooth\" });\n\n  const handleScrollTo100pxClick = useCallback(\n    () => scrollTo(100, options),\n    [options, scrollTo]\n  );\n  const handleScrollToBottomClick = useCallback(\n    () => scrollToBottom(options),\n    [options, scrollToBottom]\n  );\n  const handleScrollToEndClick = useCallback(\n    () => scrollToEnd(options),\n    [options, scrollToEnd]\n  );\n  const handleScrollToStartClick = useCallback(\n    () => scrollToStart(options),\n    [options, scrollToStart]\n  );\n  const handleScrollToTopClick = useCallback(\n    () => scrollToTop(options),\n    [options, scrollToTop]\n  );\n  const handleSmoothChange = useCallback(\n    ({ target: { checked } }) => {\n      setOptions({ behavior: checked ? \"smooth\" : \"auto\" });\n    },\n    [setOptions]\n  );\n\n  return (\n    <div className={classNames(rootCSS + \"\", \"command-bar\")}>\n      <ul className=\"command-bar__actions\">\n        <li>\n          <button\n            className=\"command-bar__action\"\n            onClick={handleScrollToBottomClick}\n          >\n            Scroll to bottom\n          </button>\n        </li>\n        <li>\n          <button\n            className=\"command-bar__action\"\n            onClick={handleScrollToTopClick}\n          >\n            Scroll to top\n          </button>\n        </li>\n        <li>\n          <button\n            className=\"command-bar__action\"\n            onClick={handleScrollToStartClick}\n          >\n            Scroll to start\n          </button>\n        </li>\n        <li>\n          <button\n            className=\"command-bar__action\"\n            onClick={handleScrollToEndClick}\n          >\n            Scroll to end\n          </button>\n        </li>\n        <li>\n          <button\n            className=\"command-bar__action\"\n            onClick={handleScrollTo100pxClick}\n          >\n            100px\n          </button>\n        </li>\n        <li>\n          <label>\n            <input\n              checked={options.behavior === \"smooth\"}\n              onChange={handleSmoothChange}\n              type=\"checkbox\"\n            />\n            Smooth\n          </label>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default CommandBar;\n","import classNames from \"classnames\";\nimport createEmotion from \"@emotion/css/create-instance\";\nimport React, { useMemo, useRef } from \"react\";\n\nimport {\n  useAnimating,\n  useAnimatingToEnd,\n  useAtBottom,\n  useAtEnd,\n  useAtStart,\n  useAtTop,\n  useMode,\n  useObserveScrollPosition,\n  useSticky,\n} from \"react-scroll-to-bottom-updated\";\n\nconst ROOT_STYLE = {\n  \"&.status-bar\": {\n    backgroundColor: \"rgba(255, 255, 255, .5)\",\n    boxShadow: \"0 0 10px rgba(0, 0, 0, .2)\",\n\n    \"& .status-bar__badges\": {\n      display: \"flex\",\n      listStyleType: \"none\",\n      margin: 0,\n      padding: 10,\n    },\n\n    \"& .status-bar__badge\": {\n      alignItems: \"center\",\n      backgroundColor: \"#DDD\",\n      borderRadius: 5,\n      display: \"flex\",\n      flex: 1,\n      fontFamily: \"Arial\",\n      fontSize: \"50%\",\n      justifyContent: \"center\",\n      padding: \"2px 4px\",\n      textAlign: \"center\",\n\n      \"&:not(:first-child)\": {\n        marginLeft: 4,\n      },\n\n      \"&.status-bar__badge--lit\": {\n        backgroundColor: \"Red\",\n        color: \"White\",\n      },\n\n      \"&.status-bar__badge--lit-green\": {\n        backgroundColor: \"Green\",\n        color: \"White\",\n      },\n    },\n  },\n};\n\nconst StatusBar = ({ className, nonce }) => {\n  const rootCSS = useMemo(\n    () => createEmotion({ key: \"playground--css-\", nonce }).css(ROOT_STYLE),\n    [nonce]\n  );\n\n  const scrollTopRef = useRef();\n  const [animating] = useAnimating();\n  const [animatingToEnd] = useAnimatingToEnd();\n  const [atBottom] = useAtBottom();\n  const [atEnd] = useAtEnd();\n  const [atStart] = useAtStart();\n  const [atTop] = useAtTop();\n  const [mode] = useMode();\n  const [sticky] = useSticky();\n\n  useObserveScrollPosition(\n    ({ scrollTop }) => {\n      const { current } = scrollTopRef;\n\n      // We are directly writing to \"innerText\" for performance reason.\n      if (current) {\n        current.innerText = scrollTop + \"px\";\n      }\n    },\n    [scrollTopRef]\n  );\n\n  return (\n    <div className={classNames(rootCSS + \"\", \"status-bar\", className)}>\n      <ul className=\"status-bar__badges\">\n        <li\n          className={classNames(\"status-bar__badge\", {\n            \"status-bar__badge--lit-green\": mode !== \"top\",\n          })}\n        >\n          STICK TO BOTTOM\n        </li>\n        <li\n          className={classNames(\"status-bar__badge\", {\n            \"status-bar__badge--lit\": animating,\n          })}\n        >\n          ANIMATING\n        </li>\n        <li\n          className={classNames(\"status-bar__badge\", {\n            \"status-bar__badge--lit\": animatingToEnd,\n          })}\n        >\n          ANIMATING TO END\n        </li>\n        <li\n          className={classNames(\"status-bar__badge\", {\n            \"status-bar__badge--lit\": atBottom,\n          })}\n        >\n          AT BOTTOM\n        </li>\n        <li\n          className={classNames(\"status-bar__badge\", {\n            \"status-bar__badge--lit\": atEnd,\n          })}\n        >\n          AT END\n        </li>\n        <li\n          className={classNames(\"status-bar__badge\", {\n            \"status-bar__badge--lit\": atStart,\n          })}\n        >\n          AT START\n        </li>\n        <li\n          className={classNames(\"status-bar__badge\", {\n            \"status-bar__badge--lit\": atTop,\n          })}\n        >\n          AT TOP\n        </li>\n        <li\n          className={classNames(\"status-bar__badge\", {\n            \"status-bar__badge--lit\": sticky,\n          })}\n        >\n          STICKY\n        </li>\n        <li className={classNames(\"status-bar__badge\")} ref={scrollTopRef}></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default StatusBar;\n","/* eslint no-magic-numbers: \"off\" */\n\nimport { LoremIpsum, loremIpsum } from \"lorem-ipsum\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport ReactScrollToBottom, {\n  StateContext,\n} from \"react-scroll-to-bottom-updated\";\n\nimport classNames from \"classnames\";\nimport createEmotion from \"@emotion/css/create-instance\";\nimport Interval from \"react-interval\";\n\nimport CommandBar from \"./CommandBar\";\nimport StatusBar from \"./StatusBar\";\n\nconst FADE_IN_ANIMATION_KEYFRAMES = {\n  \"0%\": { opacity: 0.2 },\n  \"100%\": { opacity: 1 },\n};\n\nconst ROOT_STYLE = {\n  \"& > ul.button-bar\": {\n    display: \"flex\",\n    listStyleType: \"none\",\n    margin: 0,\n    padding: 0,\n\n    \"& > li:not(:last-child)\": {\n      marginRight: 10,\n    },\n  },\n\n  \"& > .panes\": {\n    display: \"flex\",\n\n    \"& > *\": {\n      flex: 1,\n    },\n\n    \"& > *:not(:last-child)\": {\n      marginRight: 10,\n    },\n  },\n\n  \"& > .version\": {\n    bottom: 10,\n    position: \"absolute\",\n  },\n};\n\nconst CONTAINER_STYLE = {\n  borderColor: \"Black\",\n  borderStyle: \"solid\",\n  borderWidth: 1,\n  height: 400,\n  marginTop: 10,\n};\n\nconst LARGE_CONTAINER_STYLE = {\n  height: 600,\n};\n\nconst SCROLL_VIEW_STYLE = {\n  backgroundColor: \"#EEE\",\n};\n\nconst SCROLL_VIEW_PADDING_STYLE = {\n  paddingLeft: 10,\n  paddingRight: 10,\n\n  \"&:not(.sticky)\": {\n    backgroundColor: \"rgba(255, 0, 0, .1)\",\n  },\n};\n\nconst SMALL_CONTAINER_STYLE = {\n  height: 300,\n};\n\nconst STATUS_BAR_CSS = {\n  bottom: 0,\n  position: \"sticky\",\n};\n\nconst createParagraphs = (count) =>\n  new Array(count).fill().map(() => loremIpsum({ units: \"paragraph\" }));\n\nconst App = ({ nonce }) => {\n  const {\n    containerCSS,\n    largeContainerCSS,\n    rootCSS,\n    scrollViewCSS,\n    scrollViewPaddingCSS,\n    smallContainerCSS,\n    statusBarCSS,\n  } = useMemo(() => {\n    const { css, keyframes } = createEmotion({\n      key: \"playground--css-\",\n      nonce,\n    });\n\n    return {\n      containerCSS: css(CONTAINER_STYLE),\n      largeContainerCSS: css(LARGE_CONTAINER_STYLE),\n      rootCSS: css(ROOT_STYLE),\n      scrollViewCSS: css(SCROLL_VIEW_STYLE),\n      scrollViewPaddingCSS: css({\n        ...SCROLL_VIEW_PADDING_STYLE,\n\n        \"& > p\": {\n          animation: `${keyframes(FADE_IN_ANIMATION_KEYFRAMES)} 500ms`,\n        },\n      }),\n      smallContainerCSS: css(SMALL_CONTAINER_STYLE),\n      statusBarCSS: css(STATUS_BAR_CSS),\n    };\n  }, [nonce]);\n\n  const [containerSize, setContainerSize] = useState(\"\");\n  const [intervalEnabled, setIntervalEnabled] = useState(false);\n  const [paragraphs, setParagraphs] = useState(createParagraphs(10));\n  const [commandBarVisible, setCommandBarVisible] = useState(false);\n  const [limitAutoScrollHeight, setLimitAutoScrollHeight] = useState(false);\n  const [loadedVersion] = useState(() =>\n    document\n      .querySelector('head meta[name=\"react-scroll-to-bottom-updated:version\"]')\n      .getAttribute(\"content\")\n  );\n  const [disableScrollToBottomPanel, setDisableScrollToBottomPanel] =\n    useState(false);\n  const [disableScrollToTopPanel, setDisableScrollToTopPanel] = useState(false);\n\n  const handleDisableScrollToBottomPanelClick = useCallback(\n    ({ target: { checked } }) => setDisableScrollToBottomPanel(checked),\n    [setDisableScrollToBottomPanel]\n  );\n\n  const handleDisableScrollToTopPanelClick = useCallback(\n    ({ target: { checked } }) => setDisableScrollToTopPanel(checked),\n    [setDisableScrollToTopPanel]\n  );\n\n  const handleAdd = useCallback(\n    (count) => setParagraphs([...paragraphs, ...createParagraphs(count)]),\n    [paragraphs, setParagraphs]\n  );\n  const handleAdd1 = useCallback(() => handleAdd(1), [handleAdd]);\n  const handleAdd10 = useCallback(() => handleAdd(10), [handleAdd]);\n  const handleAddButton = useCallback(\n    () =>\n      setParagraphs([\n        ...paragraphs,\n        \"Button: \" + loremIpsum({ units: \"words\" }),\n      ]),\n    [paragraphs, setParagraphs]\n  );\n  const handleAddSuccessively = useCallback(() => {\n    const lorem = new LoremIpsum();\n    const nextParagraphs = [...paragraphs, lorem.generateSentences(1)];\n\n    setParagraphs(nextParagraphs);\n\n    requestAnimationFrame(() =>\n      setParagraphs([...nextParagraphs, lorem.generateParagraphs(5)])\n    );\n  }, [paragraphs, setParagraphs]);\n  const handleAddAndRemove = useCallback(() => {\n    const lorem = new LoremIpsum();\n    const [, ...nextParagraphs] = paragraphs;\n\n    nextParagraphs.push(lorem.generateParagraphs(1));\n\n    setParagraphs(nextParagraphs);\n  }, [paragraphs, setParagraphs]);\n  const handleClear = useCallback(() => setParagraphs([]), [setParagraphs]);\n  const handleCommandBarVisibleChange = useCallback(\n    ({ target: { checked } }) => setCommandBarVisible(checked),\n    [setCommandBarVisible]\n  );\n  const handleContainerSizeLarge = useCallback(\n    () => setContainerSize(\"large\"),\n    [setContainerSize]\n  );\n  const handleContainerSizeNormal = useCallback(\n    () => setContainerSize(\"\"),\n    [setContainerSize]\n  );\n  const handleContainerSizeSmall = useCallback(\n    () => setContainerSize(\"small\"),\n    [setContainerSize]\n  );\n  const handleIntervalEnabledChange = useCallback(\n    ({ target: { checked: intervalEnabled } }) =>\n      setIntervalEnabled(intervalEnabled),\n    [setIntervalEnabled]\n  );\n  const handleLimitAutoScrollHeightChange = useCallback(\n    ({ target: { checked } }) => setLimitAutoScrollHeight(checked),\n    [setLimitAutoScrollHeight]\n  );\n  const containerClassName = useMemo(\n    () =>\n      classNames(\n        containerCSS + \"\",\n        containerSize === \"small\"\n          ? smallContainerCSS + \"\"\n          : containerSize === \"large\"\n          ? largeContainerCSS + \"\"\n          : \"\"\n      ),\n    [containerCSS, containerSize, largeContainerCSS, smallContainerCSS]\n  );\n\n  const handleKeyDown = useCallback(\n    ({ keyCode }) => {\n      switch (keyCode) {\n        case 49:\n          return handleAdd1();\n        case 50:\n          return handleAdd10();\n        case 51:\n          return handleClear();\n        case 52:\n          return handleContainerSizeSmall();\n        case 53:\n          return handleContainerSizeNormal();\n        case 54:\n          return handleContainerSizeLarge();\n        case 55:\n          return handleAddButton();\n        case 82:\n          return window.location.reload(); // Press R key\n        default:\n          break;\n      }\n    },\n    [\n      handleAdd1,\n      handleAdd10,\n      handleAddButton,\n      handleClear,\n      handleContainerSizeLarge,\n      handleContainerSizeNormal,\n      handleContainerSizeSmall,\n    ]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [handleKeyDown]);\n\n  const scroller = useCallback(() => 100, []);\n\n  return (\n    <div className={rootCSS + \"\"}>\n      <ul className=\"button-bar\">\n        <li>\n          <button onClick={handleAdd1}>Add new paragraph</button>\n        </li>\n        <li>\n          <button onClick={handleAdd10}>Add 10 new paragraphs</button>\n        </li>\n        <li>\n          <button onClick={handleClear}>Clear</button>\n        </li>\n        <li>\n          <button onClick={handleContainerSizeSmall}>Small</button>\n        </li>\n        <li>\n          <button onClick={handleContainerSizeNormal}>Normal</button>\n        </li>\n        <li>\n          <button onClick={handleContainerSizeLarge}>Large</button>\n        </li>\n        <li>\n          <button onClick={handleAddButton}>Add a button</button>\n        </li>\n        <li>\n          <button\n            onClick={handleAddSuccessively}\n            title='When combined with \"limit auto scroll\" checkbox, this button should pause auto-scroll.'\n          >\n            Add successively\n          </button>\n        </li>\n        <li>\n          <button\n            onClick={handleAddAndRemove}\n            title=\"Add a new paragraph and remove the first paragraph\"\n          >\n            Add and remove\n          </button>\n        </li>\n        <li>\n          <label>\n            <input\n              checked={intervalEnabled}\n              onChange={handleIntervalEnabledChange}\n              type=\"checkbox\"\n            />\n            Add one every second\n          </label>\n        </li>\n        <li>\n          <label>\n            <input\n              checked={commandBarVisible}\n              onChange={handleCommandBarVisibleChange}\n              type=\"checkbox\"\n            />\n            Show command bar\n          </label>\n        </li>\n        <li>\n          <label>\n            <input\n              checked={limitAutoScrollHeight}\n              onChange={handleLimitAutoScrollHeightChange}\n              type=\"checkbox\"\n            />\n            Limit auto scroll height to 100px\n          </label>\n        </li>\n      </ul>\n      <div className=\"panes\">\n        <div>\n          {disableScrollToBottomPanel ? (\n            <div className={containerClassName} />\n          ) : (\n            <ReactScrollToBottom\n              className={containerClassName}\n              initialScrollBehavior=\"auto\"\n              nonce=\"a1b2c3d\"\n              scroller={limitAutoScrollHeight ? scroller : undefined}\n              scrollViewClassName={scrollViewCSS + \"\"}\n            >\n              {commandBarVisible && <CommandBar nonce={nonce} />}\n              <StateContext.Consumer>\n                {({ sticky }) => (\n                  <div\n                    className={classNames(scrollViewPaddingCSS + \"\", {\n                      sticky,\n                    })}\n                  >\n                    {paragraphs.map((paragraph) => (\n                      <p key={paragraph}>\n                        {paragraph.startsWith(\"Button: \") ? (\n                          <button type=\"button\">{paragraph.substr(8)}</button>\n                        ) : (\n                          paragraph\n                        )}\n                      </p>\n                    ))}\n                  </div>\n                )}\n              </StateContext.Consumer>\n              {commandBarVisible && <CommandBar nonce={nonce} />}\n              {commandBarVisible && (\n                <StatusBar className={statusBarCSS} nonce={nonce} />\n              )}\n            </ReactScrollToBottom>\n          )}\n          <label>\n            <input\n              checked={disableScrollToBottomPanel}\n              onChange={handleDisableScrollToBottomPanelClick}\n              type=\"checkbox\"\n            />\n            Disable this panel\n          </label>\n        </div>\n        <div>\n          {disableScrollToTopPanel ? (\n            <div className={containerClassName} />\n          ) : (\n            <ReactScrollToBottom\n              className={containerClassName}\n              initialScrollBehavior=\"auto\"\n              mode=\"top\"\n              nonce=\"a1b2c3d\"\n              scroller={limitAutoScrollHeight ? scroller : undefined}\n            >\n              {commandBarVisible && <CommandBar nonce={nonce} />}\n              <StateContext.Consumer>\n                {({ sticky }) => (\n                  <div\n                    className={classNames(scrollViewPaddingCSS + \"\", {\n                      sticky,\n                    })}\n                  >\n                    {[...paragraphs].reverse().map((paragraph) => (\n                      <p key={paragraph}>\n                        {paragraph.startsWith(\"Button: \") ? (\n                          <button type=\"button\">{paragraph.substr(8)}</button>\n                        ) : (\n                          paragraph\n                        )}\n                      </p>\n                    ))}\n                  </div>\n                )}\n              </StateContext.Consumer>\n              {commandBarVisible && <CommandBar nonce={nonce} />}\n              {commandBarVisible && (\n                <StatusBar className={statusBarCSS} nonce={nonce} />\n              )}\n            </ReactScrollToBottom>\n          )}\n          <label>\n            <input\n              checked={disableScrollToTopPanel}\n              onChange={handleDisableScrollToTopPanelClick}\n              type=\"checkbox\"\n            />\n            Disable this panel\n          </label>\n        </div>\n      </div>\n      <div className=\"version\">\n        <code>react-scroll-to-bottom-updated@{loadedVersion}</code> has loaded.\n      </div>\n      {intervalEnabled && (\n        <Interval callback={handleAdd1} enabled={true} timeout={1000} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App nonce=\"a1b2c3d\" />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}